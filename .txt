AA197 ORD BOS 2012-03-12 11:50 
AA197 ORD BOS 2012-03-12 11:50 
DL828 IAH SLC 2012-06-02 7:4
DL828 IAH SLC 2012-06-02 7:4
F9612 DEN MIA 2014-12-19 22:15
AA44 SEA JFK 2015-02-05 7:45
AA44 SEA JFK 2015-02-05 7:45
AA43 DFW DTW 2016-01-06 11:00
AA43 DFW DTW 2016-01-06 11:00
AA43 DFW DTW 2016-01-17 11:00
AA43 DFW DTW 2016-01-17 11:00
DL1087 ATL DAB 2016-04-10 12:05
DL1087 ATL DAB 2016-04-10 12:05
AA1 JFK LAX 2016-07-02 9:00
AA1 JFK LAX 2016-07-02 9:00
DL801 GEG MSP 2016-08-31 9:00
DL801 GEG MSP 2016-08-31 9:00
OO7435 DTW PLN 2016-11-22 21:55
OO7435 DTW PLN 2016-11-22 21:55
AA197 ORD BOS 2012-03-12 11:50 
AA197 ORD BOS 2012-03-12 11:50 
DL828 IAH SLC 2012-06-02 7:4
DL828 IAH SLC 2012-06-02 7:4
F9612 DEN MIA 2014-12-19 22:15
AA44 SEA JFK 2015-02-05 7:45
AA44 SEA JFK 2015-02-05 7:45
AA43 DFW DTW 2016-01-06 11:00
AA43 DFW DTW 2016-01-06 11:00
AA43 DFW DTW 2016-01-17 11:00
AA43 DFW DTW 2016-01-17 11:00
DL1087 ATL DAB 2016-04-10 12:05
DL1087 ATL DAB 2016-04-10 12:05
AA1 JFK LAX 2016-07-02 9:00
AA1 JFK LAX 2016-07-02 9:00
DL801 GEG MSP 2016-08-31 9:00
DL801 GEG MSP 2016-08-31 9:00
OO7435 DTW PLN 2016-11-22 21:55
OO7435 DTW PLN 2016-11-22 21:55
AA197 ORD BOS 2012-03-12 11:50 
AA197 ORD BOS 2012-03-12 11:50 
DL828 IAH SLC 2012-06-02 7:4
DL828 IAH SLC 2012-06-02 7:4
F9612 DEN MIA 2014-12-19 22:15
AA44 SEA JFK 2015-02-05 7:45
AA44 SEA JFK 2015-02-05 7:45
AA43 DFW DTW 2016-01-06 11:00
AA43 DFW DTW 2016-01-06 11:00
AA43 DFW DTW 2016-01-17 11:00
AA43 DFW DTW 2016-01-17 11:00
DL1087 ATL DAB 2016-04-10 12:05
DL1087 ATL DAB 2016-04-10 12:05
AA1 JFK LAX 2016-07-02 9:00
AA1 JFK LAX 2016-07-02 9:00
DL801 GEG MSP 2016-08-31 9:00
DL801 GEG MSP 2016-08-31 9:00
OO7435 DTW PLN 2016-11-22 21:55
OO7435 DTW PLN 2016-11-22 21:55

#include<stdio.h>
#include<string.h>
#include<stdlib.h>

//Just some function prototypes.

//Our main function.
	int result, errno;

	if(argc < 3 || argc > 3) {
		Usage(argv[0]);
		exit(1);
	}

	//Use system("clear") on Unix/Linux
	system("clear");

	result = Search_in_File(argv[1], argv[2]);
	if(result == -1) {
		perror("Error");
		printf("Error number = %d\n", errno);
		exit(1);
	}
	return(0);
}

	printf("Usage: %s <file> <string>\n", filename);
	printf("%s ", filename);
}

	FILE *fp;
	int line_num = 1;
	int find_result = 0;
	char temp[512];
	
	if((fp = fopen(fname, "r")) == NULL) {
		return(-1);
	}

	while(fgets(temp, 512, fp) != NULL) {
		if((strstr(temp, str)) != NULL) {
			printf("A match found on line: %d\n", line_num);
			//printf("\n%s\n", temp);
			find_result++;
		}
		line_num++;
	}
   printf("\n (%s.txt,  %d) \n", str, find_result); // .txt probably shouldnt be hardcoded and this needs to be done with multiple files, not just 1
	if(find_result == 0) {
		printf("\nSorry, couldn't find a match.\n");
	}
	
	//Close the file if still open.
	if(fp) {
		fclose(fp);
	}
   	return(0);
}


/* Bonus
/* Below you'll find another way to handle
/* files and error-handling using a stream. *\

//FILE *stream = fopen("test.txt", "r");
//if(!stream) {
    /* Handle error properly here */
    //return;
//}
//fprintf(stream, "Hello world!");
//fclose(stream);





